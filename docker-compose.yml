
services:
  backend:
    build:
      context: ./node_backend
      dockerfile: Dockerfile
      target: development
    ports:
      - "5000:3001"
    working_dir: /workspace/node_backend
    env_file:
      - .env
      - .env.node_backend
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3001
      - PGHOST=${PGHOST}
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGDATABASE=${PGDATABASE}
      - DATABASE_URL=${DATABASE_URL}
      - NEON_API_KEY=${NEON_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - BIBLE_API_KEY=${BIBLE_API_KEY}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:5173}
      - NPM_CONFIG_PRODUCTION=false
    volumes:
      - ./node_backend:/workspace/node_backend
      - node_modules_backend:/workspace/node_backend/node_modules
    command: npm run dev
    networks:
      - app-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: development
    ports:
      - "5173:5173"
    working_dir: /workspace/client
    env_file:
      - .env
      - .env.client
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_API_URL=${VITE_API_URL:-http://localhost:5000}
      - VITE_FRONTEND_URL=${VITE_FRONTEND_URL:-http://localhost:5173}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEON_API_KEY=${NEON_API_KEY}
      - NPM_CONFIG_PRODUCTION=false
    volumes:
      - ./client:/workspace/client
      - node_modules_client:/workspace/client/node_modules
    depends_on:
      - backend
    command: npm run dev
    networks:
      - app-network

volumes:
  node_modules_backend:
  node_modules_client:
  postgres_data:

networks:
  app-network:
    driver: bridge